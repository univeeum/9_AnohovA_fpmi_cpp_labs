#include <iostream>
int main() {
	int x = 0;
    int* p = &x;
    std::cout << sizeof(p) << '\n';
	//std::cout << &x << '\n';

} 

/*

    rvalue есть только в моменте выполнения то есть int x = 3 + t где 3 + t есть Rlvalue а lvalue это переменная которая реально есть 
    у нее есть адрес в памяти int *p int x func() если возвращает не ссылку на жлемент и тд
    т е оператор & требует чтобы его аргумент был lvalue 

    Потому что у lvalue (переменной) есть адрес в памяти. А у rvalue (временного значения, например, результата x+5) адреса нет 
    — оно вычисляется, используется и сразу "исчезает". Взять адрес у того, чего нет, — невозможно.

*/